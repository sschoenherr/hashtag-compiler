package hashtag;
import java_cup.runtime.*;
import java.util.*;



//------------------------------------------------PARSER CODE-------------------------------------------------------
parser code {:

public void report_error(String message, Object info){
  StringBuilder m = new StringBuilder("Error");
  if(info instanceof java_cup.runtime.Symbol){
       java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol)info);
       if(s.left >= 0){
        m.append(" in line " + (s.left+1));
         if(s.right >=0)
           m.append(", column " + (s.right+1));
      }
    }
     m.append(" : " + message);
     Interfaz.console.setText(Interfaz.console.getText() + m.toString() + "\n");
}

public void report_fatal_error(String message, Object info){
   report_error(message, info);
   //System.exit(1);
}
:}

//------------------------------------------------TERMINALES-------------------------------------------------------

terminal MAINBEGIN, ENDMAIN, BEGIN, DO, END;
terminal FUNCTION, RETURN, PRINT;
terminal FOR, WHILE, BREAK;
terminal IF, ELSE, AND, OR, SWITCH, CASE;
terminal SUMA, MENOS, DIV, MULT, MOD;
terminal MAYOR, MENOR, MENORIGUAL, MAYORIGUAL, IGUAL, DIFERENTE, NOT, TRUE, FALSE;
terminal PARIZQ, PARDER, COMA, PUNTOCOMA, INTERROGACION, UNACOMILLA, CORCHETEIZQ, CORCHETEDER, DOSPUNTOS, ASIGNACION, PUNTO;
terminal IDENTIFICADOR;
terminal NUMERO, REAL;

terminal Integer   INT;
terminal Double    DOUBLE;
terminal Char      CHAR;
terminal String    STRING;
terminal Boolean   BOOLEAN;


//------------------------------------------------NO-TERMINALES----------------------------------------------------
non terminal Program, Mainbody, FunctionList, FunctionPart, ParamsList, ParamsPart, Type;
non terminal Body, Vardeclist, Vardecpart;
non terminal ExpresionAritmetica, Expr, Factor, Term, Vals;


//------------------------------------------------PRECEDENCIA--------------------------------------------------------

precedence left  SUMA,MENOS;
precedence left  MULT,DIV,MOD;

//------------------------------------------------GRAMATICA-------------------------------------------------------

start with Program;

Program                     ::= BEGIN FunctionList Mainbody END | BEGIN Mainbody END;
FunctionList                ::= FunctionList FunctionPart
                                |
                                FunctionPart;

FunctionPart                ::= FUNCTION Type IDENTIFICADOR PARIZQ ParamsList PARDER DO Body END;
ParamsList                  ::= ParamsList COMA ParamsPart
                                |
                                ParamsPart
                                | ;

ParamsPart                  ::= Type IDENTIFICADOR;
Type                        ::= INT | DOUBLE | BOOLEAN | STRING | CHAR;

Mainbody                    ::= MAINBEGIN Body ENDMAIN;
Body                        ::= Vardeclist ;
Vardeclist                  ::= Vardeclist PUNTOCOMA Vardecpart
                                |
                                Vardecpart
                                | ;
Vardecpart                  ::= Type IDENTIFICADOR ASIGNACION ExpresionAritmetica
                                |
                                Type IDENTIFICADOR ASIGNACION Vals
                                |
                                ParamsPart PUNTOCOMA ;

Vals                        ::= CHAR | STRING | TRUE | FALSE;

ExpresionAritmetica         ::= Expr PUNTOCOMA;
Expr                        ::= Expr SUMA Factor | Expr MENOS Factor | Factor;
Factor                      ::= Factor MULT Term | Factor DIV Term | Term;
Term                        ::= PARIZQ Expr PARDER | NUMERO | IDENTIFICADOR;